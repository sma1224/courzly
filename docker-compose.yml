version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: courzly
      POSTGRES_USER: courzly_user
      POSTGRES_PASSWORD: courzly_pass
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/setup/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U courzly_user -d courzly"]
      interval: 30s
      timeout: 10s
      retries: 3

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  flowise:
    image: flowiseai/flowise:latest
    environment:
      - DATABASE_PATH=/root/.flowise
      - APIKEY_PATH=/root/.flowise
      - SECRETKEY_PATH=/root/.flowise
      - LOG_LEVEL=info
      - LOG_PATH=/root/.flowise/logs
    ports:
      - "3000:3000"
    volumes:
      - flowise_data:/root/.flowise
      - ./backend/flowise:/root/.flowise/workflows
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy

  api:
    build:
      context: ./backend/api
      dockerfile: Dockerfile
    environment:
      - DATABASE_URL=postgresql://courzly_user:courzly_pass@postgres:5432/courzly
      - REDIS_URL=redis://redis:6379
      - FLOWISE_URL=http://flowise:3000
    ports:
      - "8000:8000"
    volumes:
      - ./backend/api:/app
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      flowise:
        condition: service_started
    command: uvicorn main:app --host 0.0.0.0 --port 8000 --reload

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3001:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    environment:
      - REACT_APP_API_URL=http://localhost:8000
      - REACT_APP_FLOWISE_URL=http://localhost:3000
    depends_on:
      - api

volumes:
  postgres_data:
  redis_data:
  flowise_data: